# docker-compose.yml
version: '3.8'

services:
  influxdb:
    image: influxdb:2.7 # Use the official image directly
    container_name: influxdb_service # Optional: Give it a specific name
    ports:
      - "8086:8086" # Map host port 8086 to container port 8086
    volumes:
      - influxdb_data:/var/lib/influxdb2 # Persist InfluxDB data
    environment:
      # --- InfluxDB Initial Setup Configuration ---
      # These are used by the InfluxDB container ON FIRST RUN to set itself up.
      # Change these values!
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=my-admin-user      # Choose an admin username
      - DOCKER_INFLUXDB_INIT_PASSWORD=my-strong-password # Choose a strong password
      - DOCKER_INFLUXDB_INIT_ORG=my-org                  # Choose an organization name
      - DOCKER_INFLUXDB_INIT_BUCKET=my-bucket            # Choose a bucket name
      - DOCKER_INFLUXDB_INIT_RETENTION= # Optional: e.g., 7d, 30d. Empty means infinite.
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token # Choose a strong admin/operator token
    networks:
      - app-network

  fastapi_app:
    build:
      context: .          # Look for Dockerfile in the current directory
      dockerfile: Dockerfile.python # Specify the python Dockerfile
    container_name: fastapi_influx_app # Optional: Give it a specific name
    ports:
      - "8000:8000"      # Map host port 8000 to container port 8000
    environment:
      # --- Python App Configuration ---
      # These MUST match the values used/generated by the InfluxDB setup above.
      # The URL uses the service name 'influxdb' defined in this file.
      - INFLUXDB_V2_URL=http://influxdb:8086
      - INFLUXDB_V2_TOKEN=my-super-secret-auth-token # Must match DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
      - INFLUXDB_V2_ORG=my-org                      # Must match DOCKER_INFLUXDB_INIT_ORG
      - INFLUXDB_V2_BUCKET=my-bucket                # Must match DOCKER_INFLUXDB_INIT_BUCKET
    depends_on:
      - influxdb         # Wait for influxdb service to start (doesn't guarantee readiness)
    networks:
      - app-network
    volumes:
      - .:/app # Mount the current directory to the container

networks:
  app-network:
    driver: bridge

volumes:
  influxdb_data: # Define the named volume for persistence